package com.bnu.springdemo.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "projectinformationsharingsystem")
public class Users implements java.io.Serializable {

	private String username;
	private String password;
	private byte enabled;
	private String firstName;
	private String lastName;
	private String userContactNo;
	private String userEmailId;
	private byte block;
	private Set<Authorities> authoritieses = new HashSet<Authorities>(0);
	private Set<Project> projects = new HashSet<Project>(0);
	private Set<InstituteAdmin> instituteAdmins = new HashSet<InstituteAdmin>(0);
	private Set<UserIntitute> userIntitutes = new HashSet<UserIntitute>(0);
	private Set<RatingByUser> ratingByUsers = new HashSet<RatingByUser>(0);

	public Users() {
	}

	public Users(String username, String password, byte enabled,
			String firstName, String lastName, String userContactNo,
			String userEmailId, byte block) {
		this.username = username;
		this.password = password;
		this.enabled = enabled;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userContactNo = userContactNo;
		this.userEmailId = userEmailId;
		this.block = block;
	}

	public Users(String username, String password, byte enabled,
			String firstName, String lastName, String userContactNo,
			String userEmailId, byte block, Set<Authorities> authoritieses,
			Set<Project> projects, Set<InstituteAdmin> instituteAdmins,
			Set<UserIntitute> userIntitutes, Set<RatingByUser> ratingByUsers) {
		this.username = username;
		this.password = password;
		this.enabled = enabled;
		this.firstName = firstName;
		this.lastName = lastName;
		this.userContactNo = userContactNo;
		this.userEmailId = userEmailId;
		this.block = block;
		this.authoritieses = authoritieses;
		this.projects = projects;
		this.instituteAdmins = instituteAdmins;
		this.userIntitutes = userIntitutes;
		this.ratingByUsers = ratingByUsers;
	}

	@Id
	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "enabled", nullable = false)
	public byte getEnabled() {
		return this.enabled;
	}

	public void setEnabled(byte enabled) {
		this.enabled = enabled;
	}

	@Column(name = "first_name", nullable = false, length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "user_contact_no", nullable = false, length = 45)
	public String getUserContactNo() {
		return this.userContactNo;
	}

	public void setUserContactNo(String userContactNo) {
		this.userContactNo = userContactNo;
	}

	@Column(name = "user_email_id", nullable = false, length = 45)
	public String getUserEmailId() {
		return this.userEmailId;
	}

	public void setUserEmailId(String userEmailId) {
		this.userEmailId = userEmailId;
	}

	@Column(name = "block", nullable = false)
	public byte getBlock() {
		return this.block;
	}

	public void setBlock(byte block) {
		this.block = block;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Authorities> getAuthoritieses() {
		return this.authoritieses;
	}

	public void setAuthoritieses(Set<Authorities> authoritieses) {
		this.authoritieses = authoritieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<InstituteAdmin> getInstituteAdmins() {
		return this.instituteAdmins;
	}

	public void setInstituteAdmins(Set<InstituteAdmin> instituteAdmins) {
		this.instituteAdmins = instituteAdmins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserIntitute> getUserIntitutes() {
		return this.userIntitutes;
	}

	public void setUserIntitutes(Set<UserIntitute> userIntitutes) {
		this.userIntitutes = userIntitutes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<RatingByUser> getRatingByUsers() {
		return this.ratingByUsers;
	}

	public void setRatingByUsers(Set<RatingByUser> ratingByUsers) {
		this.ratingByUsers = ratingByUsers;
	}

}
